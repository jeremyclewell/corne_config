/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        JK-Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
            timeout-ms = <200>;
            layers = <0>;
            slow-release;
        };
    };

    macros {
        PW: PW {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp A &kp L &kp L &kp Y &kp N1 &kp N3 &kp N1 &kp N3 &kp N7>;
            label = "PW";
        };
    };

    behaviors {
        HRML: HRML {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "tap-preferred";
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 19 7 8 9 18 19 20 21 22 23 30 31 32 33 34 35 40 41 11 10 39 36 37 38>;
        };

        HRMR: HRMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        Double_G_Tab: Double_G_Tab {
            compatible = "zmk,behavior-tap-dance";
            label = "DOUBLE_G_TAB";
            #binding-cells = <0>;
            bindings = <&kp G>, <&kp TAB>;

            tapping-term-ms = <200>;
        };

        Double_H_return: Double_H_return {
            compatible = "zmk,behavior-tap-dance";
            label = "DOUBLE_H_RETURN";
            #binding-cells = <0>;
            bindings = <&kp H>, <&kp ENTER>;
        };

        Brackets_left: Brackets_left {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKETS_LEFT";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp LEFT_BRACE>,
                <&kp LEFT_BRACKET>;
        };

        Brackets_right: Brackets_right {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKETS_RIGHT";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp RIGHT_BRACE>,
                <&kp RIGHT_BRACKET>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB  &kp Q  &kp W                 &kp E             &kp R             &kp T            &kp Y             &kp U              &kp I              &kp O                  &kp P     &kp ENTER
&kp ESC  &kp A  &HRML LEFT_CONTROL S  &HRML LEFT_ALT D  &HRML LEFT_GUI F  &Double_G_Tab    &Double_H_return  &HRMR RIGHT_GUI J  &HRMR RIGHT_ALT K  &HRMR RIGHT_CONTROL L  &kp SEMI  &kp SQT
&mo 1    &kp Z  &kp X                 &kp C             &kp V             &kp B            &kp N             &kp M              &kp COMMA          &kp DOT                &kp FSLH  &mo 2
                                      &Brackets_left    &kp LEFT_SHIFT    &kp BACKSPACE    &kp SPACE         &kp RIGHT_SHIFT    &Brackets_right
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none    &kp N7        &kp N8        &kp N9        &PW     &kp BSPC
&bt BT_CLR  &none         &none         &none         &none         &none           &none    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &kp N0   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET  &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TILDE  &kp EXCL   &kp AT          &kp HASH         &kp DLLR       &kp PRCNT    &none           &none           &none         &none            &none  &kp BSPC
&none      &kp CARET  &kp AMPERSAND   &kp MINUS        &kp PLUS       &kp EQUAL    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none  &none
&none      &trans     &kp UNDERSCORE  &kp KP_MULTIPLY  &kp BACKSLASH  &kp PIPE     &none           &none           &none         &none            &none  &none
                                      &none            &trans         &none        &none           &trans          &none
            >;
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
